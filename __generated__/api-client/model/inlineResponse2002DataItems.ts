/**
 * CryptoAPIs
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { InlineResponse2002DataApprovals } from "./inlineResponse2002DataApprovals"
import { InlineResponse2002DataDestinations } from "./inlineResponse2002DataDestinations"
import { InlineResponse2002DataRejects } from "./inlineResponse2002DataRejects"

export interface InlineResponse2002DataItems {
  /**
   * ID of the transaction request.
   */
  id: string
  /**
   * Status of the transaction request.
   */
  status: string
  /**
   * Blockchain of the transaction request.
   */
  blockchain: string
  /**
   * Network of the transaction request.
   */
  network: string
  /**
   * Fee priority of the transaction request.
   */
  feePriority: string
  /**
   * Context of the transaction request.
   */
  context: string
  destinations: Array<InlineResponse2002DataDestinations>
  /**
   * Total amount of the current transaction request.
   */
  amount: string
  /**
   * Timestamp of the transaction request.
   */
  createdTimestamp: string
  approvals?: Array<InlineResponse2002DataApprovals>
  /**
   * Required approvals for the transaction request to be processed.
   */
  requiredApprovalsCount: number
  /**
   * ID of the Wallet
   */
  walletId: string
  /**
   * Name of the Wallet
   */
  walletName: string
  /**
   * Total amount of the current transaction request in USD
   */
  amountInRelationUnitAsset: string
  /**
   * Required rejects for the transaction request to be processed.
   */
  requiredRejectsCount: number
  rejects: Array<InlineResponse2002DataRejects>
  rejecters: Array<string>
  approvers: Array<string>
  /**
   * If the current user can approve the transaction request.
   */
  canApprove: boolean
  /**
   * If the current user can reject the transaction request.
   */
  canReject: boolean
}
